{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["//імпортую бібліотеку 'flatpickr' для вибору дати і часу\n  import flatpickr from 'flatpickr';\n\n//імпортую CSS-стилі для 'flatpickr'\n  import 'flatpickr/dist/flatpickr.min.css';\n\n//імпортую бібліотеку 'iziToast' для показу повідомлень\n  import iziToast from 'izitoast';\n\n//імпротую стилі для 'iziToast'\n  import 'izitoast/dist/css/iziToast.min.css';\n\n/*створюю об'єкт для збереження посилань на елементи DOM, пошук елемента ведеться за селектором атрибуту*/\n  const refs = {\n  startButton: document.querySelector('[data-start]'),\n  datetimePicker: document.querySelector('#datetime-picker'),\n  daysElement: document.querySelector('[data-days]'),\n  hoursElement: document.querySelector('[data-hours]'),\n  minutesElement: document.querySelector('[data-minutes]'),\n  secondsElement: document.querySelector('[data-seconds]'),\n};\n\n/*створюю глобальну змінну для збереження вибраноі користувачем дати. Вона використовується в функціях handleDateSelection, startCountdown для перевірки та запуску таймера*/\n  let userSelectedDate = null;\n\n// налаштування для 'flatpickr'\n  const options = {\n    enableTime: true, //вмикається можливість вибору часу\n    \n    time_24hr: true, //використовую 24-годинний формат часу\n  \n    defaultDate: new Date(), //Дата за замовчуванням- поточна\n  \n    minuteIncrement: 1, //інкркмент хвилин при виборі\n  \n    onClose(selectedDates) {//виклик функціі для обробки вибраної дати\n    \n    handleDateSelection(selectedDates[0]);//передаю вибрану дату в функцію обробки\n  },\n};\n\n//ініціалізую flatpickr з вказаними налаштуваннями(поле інпут з налаштуваннями options )\n  flatpickr(refs.datetimePicker, options);\n\n// Деактивую кнопку \"Start\" при завантаженні сторінки.Для того щоб користувач не міг натиснути кнопку 'Start'поки не вибере дату.Це початковий стан кнопки\n  refs.startButton.disabled = true;\n\n//функція для обробки вибору дати, вона спрацьовує коли користувач вибрав дату\n  function handleDateSelection(selectedDate) {\n  //створюю змінну визначення поточноі дати\n  const now = new Date();\n\n//прописую умови, якщо користувач вибрав дату в минулому, показую помилку\n  if (selectedDate <= now) {\n\n//повідомлення яке показується за допомогою бібліотеки iziToast.Тут повідомлення про помилку\n  iziToast.error({\n    title: 'Invalid Date',\n    message: 'Please choose a date in the future',\n    position: 'topRight',\n  });\n    \n/*деактивовую кнопку \"Start\".Це коли користувач вибрав невалідну дату.Це запобігає запуску таймера с невалідною датою*/\n    refs.startButton.disabled = true;\n\n//очищаю збережені данні\n    userSelectedDate = null;\n  } else {\n\n//Повідомлення-якщо дата валідна(майбутня),показую успішне повідомлення\n    iziToast.success({\n      title: 'Valid Date',\n      message: 'You selected a valid date',\n      position: 'topRight',\n    });\n\n//активую кнопку \"Start\"\n    refs.startButton.disabled = false;\n\n//зберігаю вибрану дату користувачем\n    userSelectedDate = selectedDate;\n  }\n}\n\n// Створюю обробника натискання кнопки \"Start\"\n  refs.startButton.addEventListener('click', () => {\n    if (userSelectedDate === null) {\n\n//Повідомлення - якщо дата не вибрана, показую помилку\n    iziToast.error({\n      title: 'Error',\n      message: 'Please select a valid date before starting the timer',\n      position: 'topRight',\n      });\n      return;\n    }\n\n//Після запуску таймера деактивовую кнопку \"Start\".Це для того щоб користувач не міг повторно запустити таймер,поки він не завершиться\n    refs.startButton.disabled = true;\n\n//деактивую поле інпуту для вибору дати. Бо бібліотека автоматично не блокує інпут\n    refs.datetimePicker.disabled = true;\n\n//запускаю таймер як результат натискання користувачем \"Start\"\n    startCountdown();\n  });\n\n//створюю функцію для запуску таймера\n  function startCountdown() {\n    const intervalId = setInterval(() => {\n//змінна для збереження поточноі дати і часу\n  const now = new Date();\n\n//змінна для збереження різници між вибраною датою і поточним часом\n  const timeLeft = userSelectedDate - now;\n\n//прописую умови для таймера.\n   if (timeLeft <= 0) {\n    \n//якщо час закінчився то зупиняється таймер.Тобто таймер зупиняється автоматично по завершенню часу\n  clearInterval(intervalId);\n\n//оновлюю відображення часу до нулів\n     updateTimer(0);\n     \n//повідомлення про завершення таймера\n    iziToast.info({\n    title: 'Timer Ended',\n    message: 'The countdown has finished!',\n    position: 'topRight',\n        });\n\n//активую інпут для вибору дати\n    refs.datetimePicker.disabled = false;\n\n//залишаю кнопку неактивною\n    refs.startButton.disabled = true;\n    return;\n      }\n//оновлюю відображення залишкового часу\n      updateTimer(timeLeft);\n    }, 1000);\n}\n\n//створюю  функція обчислення часу.Конвертіровання мілісекунд у дні, години,хвилини,секунди\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000; // кількість мілісекунд у секунди\n  const minute = second * 60; //кількість мілісекунд у хвилини\n  const hour = minute * 60; //кількість мілісекунд у години\n  const day = hour * 24; //кількість мілісекунд у дні\n\n  // Remaining (залишок)\n  const days = Math.floor(ms / day); //визначаю кількість днів\n  const hours = Math.floor((ms % day) / hour); //визначаю кількіст годин\n  const minutes = Math.floor(((ms % day) % hour) / minute); //визначаю кількість хвилин\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second); //визначаю кількість секунд\n\n  return { days, hours, minutes, seconds };\n}\n\n// створюю функцію для додавання нуля перед числами, меншими за 10.Використовуюяі метод padStart\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');//перша цифра цільова довжина рядка \n}\n\n//створюю функцію для оновлення інтерфейса\nfunction updateTimer(ms) {\n\n//конвертую мілісекунди в дні, години,хвилини,секунди\n  const { days, hours, minutes, seconds } = convertMs(ms); \n\n//оновлюю текстовий контент відповідних елементів\n  refs.daysElement.textContent = addLeadingZero(days);\n  refs.hoursElement.textContent = addLeadingZero(hours);\n  refs.minutesElement.textContent = addLeadingZero(minutes);\n  refs.secondsElement.textContent = addLeadingZero(seconds);\n}\n\n  \n// тестування  convertMs, для вияснення вірноі обробки різних введених даних\nconsole.log(convertMs(2000)); // {days: 0, hours: 0, minutes: 0, seconds: 2}\nconsole.log(convertMs(140000)); // {days: 0, hours: 0, minutes: 2, seconds: 20}\nconsole.log(convertMs(24140000)); // {days: 0, hours: 6 minutes: 42, seconds: 20}"],"names":["refs","userSelectedDate","options","selectedDates","handleDateSelection","flatpickr","selectedDate","iziToast","startCountdown","intervalId","timeLeft","updateTimer","convertMs","ms","days","hours","minutes","seconds","addLeadingZero","value"],"mappings":"+IAaE,MAAMA,EAAO,CACb,YAAa,SAAS,cAAc,cAAc,EAClD,eAAgB,SAAS,cAAc,kBAAkB,EACzD,YAAa,SAAS,cAAc,aAAa,EACjD,aAAc,SAAS,cAAc,cAAc,EACnD,eAAgB,SAAS,cAAc,gBAAgB,EACvD,eAAgB,SAAS,cAAc,gBAAgB,CACzD,EAGE,IAAIC,EAAmB,KAGvB,MAAMC,EAAU,CACd,WAAY,GAEZ,UAAW,GAEX,YAAa,IAAI,KAEjB,gBAAiB,EAEjB,QAAQC,EAAe,CAEvBC,EAAoBD,EAAc,CAAC,CAAC,CACrC,CACH,EAGEE,EAAUL,EAAK,eAAgBE,CAAO,EAGtCF,EAAK,YAAY,SAAW,GAG5B,SAASI,EAAoBE,EAAc,CAKvCA,GAHQ,IAAI,MAMhBC,EAAS,MAAM,CACb,MAAO,eACP,QAAS,qCACT,SAAU,UACd,CAAG,EAGCP,EAAK,YAAY,SAAW,GAG5BC,EAAmB,OAInBM,EAAS,QAAQ,CACf,MAAO,aACP,QAAS,4BACT,SAAU,UAChB,CAAK,EAGDP,EAAK,YAAY,SAAW,GAG5BC,EAAmBK,EAEvB,CAGEN,EAAK,YAAY,iBAAiB,QAAS,IAAM,CAC/C,GAAIC,IAAqB,KAAM,CAG/BM,EAAS,MAAM,CACb,MAAO,QACP,QAAS,uDACT,SAAU,UAChB,CAAO,EACD,MACD,CAGDP,EAAK,YAAY,SAAW,GAG5BA,EAAK,eAAe,SAAW,GAG/BQ,GACJ,CAAG,EAGD,SAASA,GAAiB,CACxB,MAAMC,EAAa,YAAY,IAAM,CAKvC,MAAMC,EAAWT,EAHL,IAAI,KAMf,GAAIS,GAAY,EAAG,CAGpB,cAAcD,CAAU,EAGrBE,EAAY,CAAC,EAGdJ,EAAS,KAAK,CACd,MAAO,cACP,QAAS,8BACT,SAAU,UACd,CAAS,EAGLP,EAAK,eAAe,SAAW,GAG/BA,EAAK,YAAY,SAAW,GAC5B,MACG,CAEDW,EAAYD,CAAQ,CACrB,EAAE,GAAI,CACX,CAGA,SAASE,EAAUC,EAAI,CAQrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAGA,SAASC,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAGA,SAASR,EAAYE,EAAI,CAGvB,KAAM,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYL,EAAUC,CAAE,EAGtDb,EAAK,YAAY,YAAckB,EAAeJ,CAAI,EAClDd,EAAK,aAAa,YAAckB,EAAeH,CAAK,EACpDf,EAAK,eAAe,YAAckB,EAAeF,CAAO,EACxDhB,EAAK,eAAe,YAAckB,EAAeD,CAAO,CAC1D,CAIA,QAAQ,IAAIL,EAAU,GAAI,CAAC,EAC3B,QAAQ,IAAIA,EAAU,IAAM,CAAC,EAC7B,QAAQ,IAAIA,EAAU,MAAQ,CAAC"}